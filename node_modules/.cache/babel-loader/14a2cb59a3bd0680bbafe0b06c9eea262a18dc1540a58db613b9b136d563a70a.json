{"ast":null,"code":"var _jsxFileName = \"/Users/denis/Documents/github/goit/React/reactPractice/src/components/CountryInfo/CountryInfo.jsx\";\nimport { CountryWrapper, CountryDescription, Flag, Image, CountryTitle, CountryCapital, CountryDetail, Accent } from \"./CountryInfo.styled\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const CountryInfo = _ref => {\n  let {\n    flag,\n    capital,\n    country,\n    id,\n    languages = [],\n    population\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"CountryInfo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CountryWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(Flag, {\n        children: /*#__PURE__*/_jsxDEV(Image, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CountryDescription, {\n        children: [/*#__PURE__*/_jsxDEV(CountryCapital, {\n          children: [\"Capital: \", /*#__PURE__*/_jsxDEV(Accent, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 22\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CountryTitle, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CountryDetail, {\n          children: [\"Population: \", /*#__PURE__*/_jsxDEV(Accent, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CountryDetail, {\n          children: [\"Languages: \", /*#__PURE__*/_jsxDEV(Accent, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 24\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_c = CountryInfo;\nvar _c;\n$RefreshReg$(_c, \"CountryInfo\");","map":{"version":3,"names":["CountryWrapper","CountryDescription","Flag","Image","CountryTitle","CountryCapital","CountryDetail","Accent","CountryInfo","flag","capital","country","id","languages","population"],"sources":["/Users/denis/Documents/github/goit/React/reactPractice/src/components/CountryInfo/CountryInfo.jsx"],"sourcesContent":["import {\n  CountryWrapper,\n  CountryDescription,\n  Flag,\n  Image,\n  CountryTitle,\n  CountryCapital,\n  CountryDetail,\n  Accent,\n} from \"./CountryInfo.styled\";\n\nexport const CountryInfo = ({\n  flag,\n  capital,\n  country,\n  id,\n  languages = [],\n  population,\n}) => {\n  return (\n    <>\n      <h2>CountryInfo</h2>\n      <CountryWrapper>\n        <Flag>\n          <Image />\n        </Flag>\n        <CountryDescription>\n          <CountryCapital>\n            Capital: <Accent></Accent>\n          </CountryCapital>\n\n          <CountryTitle></CountryTitle>\n\n          <CountryDetail>\n            Population: <Accent></Accent>\n          </CountryDetail>\n\n          <CountryDetail>\n            Languages: <Accent></Accent>\n          </CountryDetail>\n        </CountryDescription>\n      </CountryWrapper>\n    </>\n  );\n};\n"],"mappings":";AAAA,SACEA,cAAc,EACdC,kBAAkB,EAClBC,IAAI,EACJC,KAAK,EACLC,YAAY,EACZC,cAAc,EACdC,aAAa,EACbC,MAAM,QACD,sBAAsB;AAAC;AAAA;AAE9B,OAAO,MAAMC,WAAW,GAAG,QAOrB;EAAA,IAPsB;IAC1BC,IAAI;IACJC,OAAO;IACPC,OAAO;IACPC,EAAE;IACFC,SAAS,GAAG,EAAE;IACdC;EACF,CAAC;EACC,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAoB,eACpB,QAAC,cAAc;MAAA,wBACb,QAAC,IAAI;QAAA,uBACH,QAAC,KAAK;UAAA;UAAA;UAAA;QAAA;MAAG;QAAA;QAAA;QAAA;MAAA,QACJ,eACP,QAAC,kBAAkB;QAAA,wBACjB,QAAC,cAAc;UAAA,qCACJ,QAAC,MAAM;YAAA;YAAA;YAAA;UAAA,QAAU;QAAA;UAAA;UAAA;UAAA;QAAA,QACX,eAEjB,QAAC,YAAY;UAAA;UAAA;UAAA;QAAA,QAAgB,eAE7B,QAAC,aAAa;UAAA,wCACA,QAAC,MAAM;YAAA;YAAA;YAAA;UAAA,QAAU;QAAA;UAAA;UAAA;UAAA;QAAA,QACf,eAEhB,QAAC,aAAa;UAAA,uCACD,QAAC,MAAM;YAAA;YAAA;YAAA;UAAA,QAAU;QAAA;UAAA;UAAA;UAAA;QAAA,QACd;MAAA;QAAA;QAAA;QAAA;MAAA,QACG;IAAA;MAAA;MAAA;MAAA;IAAA,QACN;EAAA,gBAChB;AAEP,CAAC;AAAC,KAjCWN,WAAW;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}