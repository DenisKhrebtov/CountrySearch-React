{"ast":null,"code":"var _jsxFileName = \"/Users/denis/Documents/github/goit/React/reactPractice/src/pages/Country.jsx\",\n  _s = $RefreshSig$();\nimport { Section, Container, CountryInfo, Loader } from \"components\";\nimport { useGetCountry } from \"hooks/useGetCountry\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Country = () => {\n  _s();\n  const {\n    country,\n    error,\n    isLoading\n  } = useGetByRegion();\n  return /*#__PURE__*/_jsxDEV(Section, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Country\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n_s(Country, \"5uv1LEncuAQ5DPNnNK0kekihpi4=\", true);\n_c = Country;\nvar _c;\n$RefreshReg$(_c, \"Country\");","map":{"version":3,"names":["Section","Container","CountryInfo","Loader","useGetCountry","Country","country","error","isLoading","useGetByRegion"],"sources":["/Users/denis/Documents/github/goit/React/reactPractice/src/pages/Country.jsx"],"sourcesContent":["import { Section, Container, CountryInfo, Loader } from \"components\";\n\nimport { useGetCountry } from \"hooks/useGetCountry\";\n\nexport const Country = () => {\n  const { country, error, isLoading } = useGetByRegion();\n  return (\n    <Section>\n      <Container>\n        <h2>Country</h2>\n      </Container>\n    </Section>\n  );\n};\n"],"mappings":";;AAAA,SAASA,OAAO,EAAEC,SAAS,EAAEC,WAAW,EAAEC,MAAM,QAAQ,YAAY;AAEpE,SAASC,aAAa,QAAQ,qBAAqB;AAAC;AAEpD,OAAO,MAAMC,OAAO,GAAG,MAAM;EAAA;EAC3B,MAAM;IAAEC,OAAO;IAAEC,KAAK;IAAEC;EAAU,CAAC,GAAGC,cAAc,EAAE;EACtD,oBACE,QAAC,OAAO;IAAA,uBACN,QAAC,SAAS;MAAA,uBACR;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAgB;MAAA;MAAA;MAAA;IAAA;EACN;IAAA;IAAA;IAAA;EAAA,QACJ;AAEd,CAAC;AAAC,GATWJ,OAAO;AAAA,KAAPA,OAAO;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}